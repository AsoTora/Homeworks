"""Задача 1
Написать программу нахождения простых чисел, используя решето Эратосфена.
Для каждой из пользовательских функций написать функцию-тест.
"""

# Для нахождения всех простых чисел не больше заданного числа n, следуя методу Эратосфена, нужно выполнить шаги:

# 1) Выписать подряд все целые числа от двух до n (2, 3, 4, …, n).

# 2) Пусть переменная i изначально равна двум — первому простому числу.

# 3) Зачеркнуть в списке числа от 2i до n считая шагами по i (это будут числа кратные i: 2i, 3i, 4i, …).

# 4) Найти первое незачёркнутое число в списке, большее чем i, и присвоить значению переменной i это число.

# Повторять шаги 3 и 4, пока возможно

# Теперь все незачёркнутые числа в списке — это все простые числа от 2 до n.

### 1 ###
def eratosp(n):
	not_prime = {j for i in range(2, n)
		for j in range(i*2, n, i)} # пункт 3, только переменные в отдельном словаре c not-prime nums
	return {i for i in range(2, n) if i not in not_prime}


print(eratosp(10))


### 2 ###
def eratosphenes(n):
	mult = []
	primes = []
	for i in range(2,n):  # последовательность диапазона 2,n
		if i not in mult:  # если среди i -- не один из предыдущих множителей
			primes.append(i)  # i - prime
			for j in range(i*2, n, i):  # по сути пункт 3) из описания, только вместе зачерквания - список
				mult.append(j)
	return primes


print(eratosphenes(20))


def tests():
	if eratosp(100) == {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}:
		if eratosp(10) == {2,3,5,7}:
			print("Tests passed")
	else:
		print("smth wrong")

if __name__ == "__main__":
	tests()